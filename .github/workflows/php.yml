name: PHP QA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4', '8.0', '8.1']
        experimental: [false]
        include:
          - php-version: 8.2
            experimental: true

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug
        tools: php-cs-fixer
        extensions: "ast, grpc, protobuf"

    - name: Validate composer.json
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-${{ matrix.php-version }}-php-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.php-version }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Check Style
      continue-on-error: ${{ matrix.experimental }}
      run: vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --dry-run --stop-on-violation --using-cache=no -vvv

    - name: Check Dependencies
      run: vendor/bin/deptrac --formatter=github-actions --report-uncovered

    - name: Run Phan
      env:
        PHAN_DISABLE_XDEBUG_WARN: 1
      run: vendor/bin/phan

    - name: Run Psalm
      run: vendor/bin/psalm --output-format=github --php-version=${{ matrix.php-version }}

    - name: Run Phpstan
      run: vendor/bin/phpstan analyse --error-format=github

    - name: Run PHPUnit (unit tests)
      run: php -dzend.assertions=1 vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover --testsuite unit

    - name: Run PHPUnit (integration tests)
      run: vendor/bin/phpunit --testsuite integration

    - name: Code Coverage
      run: bash <(curl -s https://codecov.io/bash) -F ${{ matrix.php-version }}

  packages:
    uses: opentelemetry-php/gh-workflows/.github/workflows/validate-packages.yml@main
    needs: php
    with:
      matrix_extension: '["ast, json, grpc"]'
      install_directory: '~/.test/.packages'
