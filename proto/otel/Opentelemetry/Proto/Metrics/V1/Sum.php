<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/metrics/v1/metrics.proto

namespace Opentelemetry\Proto\Metrics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Sum represents the type of a scalar metric that is calculated as a sum of all
 * reported measurements over a time interval.
 *
 * Generated from protobuf message <code>opentelemetry.proto.metrics.v1.Sum</code>
 */
class Sum extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated .opentelemetry.proto.metrics.v1.NumberDataPoint data_points = 1;</code>
     */
    private $data_points;
    /**
     * aggregation_temporality describes if the aggregator reports delta changes
     * since last report time, or cumulative changes since a fixed start time.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.metrics.v1.AggregationTemporality aggregation_temporality = 2;</code>
     */
    protected $aggregation_temporality = 0;
    /**
     * If "true" means that the sum is monotonic.
     *
     * Generated from protobuf field <code>bool is_monotonic = 3;</code>
     */
    protected $is_monotonic = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Opentelemetry\Proto\Metrics\V1\NumberDataPoint[]|\Google\Protobuf\Internal\RepeatedField $data_points
     *     @type int $aggregation_temporality
     *           aggregation_temporality describes if the aggregator reports delta changes
     *           since last report time, or cumulative changes since a fixed start time.
     *     @type bool $is_monotonic
     *           If "true" means that the sum is monotonic.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Metrics\V1\Metrics::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated .opentelemetry.proto.metrics.v1.NumberDataPoint data_points = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDataPoints()
    {
        return $this->data_points;
    }

    /**
     * Generated from protobuf field <code>repeated .opentelemetry.proto.metrics.v1.NumberDataPoint data_points = 1;</code>
     * @param \Opentelemetry\Proto\Metrics\V1\NumberDataPoint[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDataPoints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Opentelemetry\Proto\Metrics\V1\NumberDataPoint::class);
        $this->data_points = $arr;

        return $this;
    }

    /**
     * aggregation_temporality describes if the aggregator reports delta changes
     * since last report time, or cumulative changes since a fixed start time.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.metrics.v1.AggregationTemporality aggregation_temporality = 2;</code>
     * @return int
     */
    public function getAggregationTemporality()
    {
        return $this->aggregation_temporality;
    }

    /**
     * aggregation_temporality describes if the aggregator reports delta changes
     * since last report time, or cumulative changes since a fixed start time.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.metrics.v1.AggregationTemporality aggregation_temporality = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setAggregationTemporality($var)
    {
        GPBUtil::checkEnum($var, \Opentelemetry\Proto\Metrics\V1\AggregationTemporality::class);
        $this->aggregation_temporality = $var;

        return $this;
    }

    /**
     * If "true" means that the sum is monotonic.
     *
     * Generated from protobuf field <code>bool is_monotonic = 3;</code>
     * @return bool
     */
    public function getIsMonotonic()
    {
        return $this->is_monotonic;
    }

    /**
     * If "true" means that the sum is monotonic.
     *
     * Generated from protobuf field <code>bool is_monotonic = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsMonotonic($var)
    {
        GPBUtil::checkBool($var);
        $this->is_monotonic = $var;

        return $this;
    }

}

