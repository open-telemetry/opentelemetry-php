<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/metrics/experimental/metrics_config_service.proto

namespace Opentelemetry\Proto\Metrics\Experimental;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>opentelemetry.proto.metrics.experimental.MetricConfigRequest</code>
 */
class MetricConfigRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource for which configuration should be returned.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
     */
    protected $resource = null;
    /**
     * Optional. The value of MetricConfigResponse.fingerprint for the last
     * configuration that the caller received and successfully applied.
     *
     * Generated from protobuf field <code>bytes last_known_fingerprint = 2;</code>
     */
    protected $last_known_fingerprint = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Opentelemetry\Proto\Resource\V1\Resource $resource
     *           Required. The resource for which configuration should be returned.
     *     @type string $last_known_fingerprint
     *           Optional. The value of MetricConfigResponse.fingerprint for the last
     *           configuration that the caller received and successfully applied.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Metrics\Experimental\MetricsConfigService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource for which configuration should be returned.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
     * @return \Opentelemetry\Proto\Resource\V1\Resource
     */
    public function getResource()
    {
        return isset($this->resource) ? $this->resource : null;
    }

    public function hasResource()
    {
        return isset($this->resource);
    }

    public function clearResource()
    {
        unset($this->resource);
    }

    /**
     * Required. The resource for which configuration should be returned.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
     * @param \Opentelemetry\Proto\Resource\V1\Resource $var
     * @return $this
     */
    public function setResource($var)
    {
        GPBUtil::checkMessage($var, \Opentelemetry\Proto\Resource\V1\Resource::class);
        $this->resource = $var;

        return $this;
    }

    /**
     * Optional. The value of MetricConfigResponse.fingerprint for the last
     * configuration that the caller received and successfully applied.
     *
     * Generated from protobuf field <code>bytes last_known_fingerprint = 2;</code>
     * @return string
     */
    public function getLastKnownFingerprint()
    {
        return $this->last_known_fingerprint;
    }

    /**
     * Optional. The value of MetricConfigResponse.fingerprint for the last
     * configuration that the caller received and successfully applied.
     *
     * Generated from protobuf field <code>bytes last_known_fingerprint = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLastKnownFingerprint($var)
    {
        GPBUtil::checkString($var, False);
        $this->last_known_fingerprint = $var;

        return $this;
    }

}

