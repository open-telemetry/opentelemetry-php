<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/common/v1/common.proto

namespace Opentelemetry\Proto\Common\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A reference to an Entity.
 * Entity represents an object of interest associated with produced telemetry: e.g spans, metrics, profiles, or logs.
 * Status: [Development]
 *
 * Generated from protobuf message <code>opentelemetry.proto.common.v1.EntityRef</code>
 */
class EntityRef extends \Google\Protobuf\Internal\Message
{
    /**
     * The Schema URL, if known. This is the identifier of the Schema that the entity data
     * is recorded in. To learn more about Schema URL see
     * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
     * This schema_url applies to the data in this message and to the Resource attributes
     * referenced by id_keys and description_keys.
     * TODO: discuss if we are happy with this somewhat complicated definition of what
     * the schema_url applies to.
     * This field obsoletes the schema_url field in ResourceMetrics/ResourceSpans/ResourceLogs.
     *
     * Generated from protobuf field <code>string schema_url = 1;</code>
     */
    protected $schema_url = '';
    /**
     * Defines the type of the entity. MUST not change during the lifetime of the entity.
     * For example: "service" or "host". This field is required and MUST not be empty
     * for valid entities.
     *
     * Generated from protobuf field <code>string type = 2;</code>
     */
    protected $type = '';
    /**
     * Attribute Keys that identify the entity.
     * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
     * These keys MUST exist in the containing {message}.attributes.
     *
     * Generated from protobuf field <code>repeated string id_keys = 3;</code>
     */
    private $id_keys;
    /**
     * Descriptive (non-identifying) attribute keys of the entity.
     * MAY change over the lifetime of the entity. MAY be empty.
     * These attribute keys are not part of entity's identity.
     * These keys MUST exist in the containing {message}.attributes.
     *
     * Generated from protobuf field <code>repeated string description_keys = 4;</code>
     */
    private $description_keys;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $schema_url
     *           The Schema URL, if known. This is the identifier of the Schema that the entity data
     *           is recorded in. To learn more about Schema URL see
     *           https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
     *           This schema_url applies to the data in this message and to the Resource attributes
     *           referenced by id_keys and description_keys.
     *           TODO: discuss if we are happy with this somewhat complicated definition of what
     *           the schema_url applies to.
     *           This field obsoletes the schema_url field in ResourceMetrics/ResourceSpans/ResourceLogs.
     *     @type string $type
     *           Defines the type of the entity. MUST not change during the lifetime of the entity.
     *           For example: "service" or "host". This field is required and MUST not be empty
     *           for valid entities.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $id_keys
     *           Attribute Keys that identify the entity.
     *           MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
     *           These keys MUST exist in the containing {message}.attributes.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $description_keys
     *           Descriptive (non-identifying) attribute keys of the entity.
     *           MAY change over the lifetime of the entity. MAY be empty.
     *           These attribute keys are not part of entity's identity.
     *           These keys MUST exist in the containing {message}.attributes.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Common\V1\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * The Schema URL, if known. This is the identifier of the Schema that the entity data
     * is recorded in. To learn more about Schema URL see
     * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
     * This schema_url applies to the data in this message and to the Resource attributes
     * referenced by id_keys and description_keys.
     * TODO: discuss if we are happy with this somewhat complicated definition of what
     * the schema_url applies to.
     * This field obsoletes the schema_url field in ResourceMetrics/ResourceSpans/ResourceLogs.
     *
     * Generated from protobuf field <code>string schema_url = 1;</code>
     * @return string
     */
    public function getSchemaUrl()
    {
        return $this->schema_url;
    }

    /**
     * The Schema URL, if known. This is the identifier of the Schema that the entity data
     * is recorded in. To learn more about Schema URL see
     * https://opentelemetry.io/docs/specs/otel/schemas/#schema-url
     * This schema_url applies to the data in this message and to the Resource attributes
     * referenced by id_keys and description_keys.
     * TODO: discuss if we are happy with this somewhat complicated definition of what
     * the schema_url applies to.
     * This field obsoletes the schema_url field in ResourceMetrics/ResourceSpans/ResourceLogs.
     *
     * Generated from protobuf field <code>string schema_url = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_url = $var;

        return $this;
    }

    /**
     * Defines the type of the entity. MUST not change during the lifetime of the entity.
     * For example: "service" or "host". This field is required and MUST not be empty
     * for valid entities.
     *
     * Generated from protobuf field <code>string type = 2;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Defines the type of the entity. MUST not change during the lifetime of the entity.
     * For example: "service" or "host". This field is required and MUST not be empty
     * for valid entities.
     *
     * Generated from protobuf field <code>string type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Attribute Keys that identify the entity.
     * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
     * These keys MUST exist in the containing {message}.attributes.
     *
     * Generated from protobuf field <code>repeated string id_keys = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIdKeys()
    {
        return $this->id_keys;
    }

    /**
     * Attribute Keys that identify the entity.
     * MUST not change during the lifetime of the entity. The Id must contain at least one attribute.
     * These keys MUST exist in the containing {message}.attributes.
     *
     * Generated from protobuf field <code>repeated string id_keys = 3;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIdKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->id_keys = $arr;

        return $this;
    }

    /**
     * Descriptive (non-identifying) attribute keys of the entity.
     * MAY change over the lifetime of the entity. MAY be empty.
     * These attribute keys are not part of entity's identity.
     * These keys MUST exist in the containing {message}.attributes.
     *
     * Generated from protobuf field <code>repeated string description_keys = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDescriptionKeys()
    {
        return $this->description_keys;
    }

    /**
     * Descriptive (non-identifying) attribute keys of the entity.
     * MAY change over the lifetime of the entity. MAY be empty.
     * These attribute keys are not part of entity's identity.
     * These keys MUST exist in the containing {message}.attributes.
     *
     * Generated from protobuf field <code>repeated string description_keys = 4;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDescriptionKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->description_keys = $arr;

        return $this;
    }

}

