<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/trace/v1/trace_config.proto

namespace Opentelemetry\Proto\Trace\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Sampler that tries to sample with a rate per time window.
 *
 * Generated from protobuf message <code>opentelemetry.proto.trace.v1.RateLimitingSampler</code>
 */
class RateLimitingSampler extends \Google\Protobuf\Internal\Message
{
    /**
     * Rate per second.
     *
     * Generated from protobuf field <code>int64 qps = 1;</code>
     */
    protected $qps = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $qps
     *           Rate per second.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Trace\V1\TraceConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * Rate per second.
     *
     * Generated from protobuf field <code>int64 qps = 1;</code>
     * @return int|string
     */
    public function getQps()
    {
        return $this->qps;
    }

    /**
     * Rate per second.
     *
     * Generated from protobuf field <code>int64 qps = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setQps($var)
    {
        GPBUtil::checkInt64($var);
        $this->qps = $var;

        return $this;
    }

}

