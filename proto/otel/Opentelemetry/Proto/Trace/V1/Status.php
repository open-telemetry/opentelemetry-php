<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/trace/v1/trace.proto

namespace Opentelemetry\Proto\Trace\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The Status type defines a logical error model that is suitable for different
 * programming environments, including REST APIs and RPC APIs.
 *
 * Generated from protobuf message <code>opentelemetry.proto.trace.v1.Status</code>
 */
class Status extends \Google\Protobuf\Internal\Message
{
    /**
     * A developer-facing human readable error message.
     *
     * Generated from protobuf field <code>string message = 2;</code>
     */
    protected $message = '';
    /**
     * The status code.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
     */
    protected $code = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $message
     *           A developer-facing human readable error message.
     *     @type int $code
     *           The status code.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Trace\V1\Trace::initOnce();
        parent::__construct($data);
    }

    /**
     * A developer-facing human readable error message.
     *
     * Generated from protobuf field <code>string message = 2;</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * A developer-facing human readable error message.
     *
     * Generated from protobuf field <code>string message = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

    /**
     * The status code.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
     * @return int
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * The status code.
     *
     * Generated from protobuf field <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkEnum($var, \Opentelemetry\Proto\Trace\V1\Status\StatusCode::class);
        $this->code = $var;

        return $this;
    }

}

