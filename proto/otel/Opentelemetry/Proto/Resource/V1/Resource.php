<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/resource/v1/resource.proto

namespace Opentelemetry\Proto\Resource\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Resource information.
 *
 * Generated from protobuf message <code>opentelemetry.proto.resource.v1.Resource</code>
 */
class Resource extends \Google\Protobuf\Internal\Message
{
    /**
     * Set of attributes that describe the resource.
     * Attribute keys MUST be unique (it is not allowed to have more than one
     * attribute with the same key).
     * The attribute values SHOULD NOT contain empty values.
     * The attribute values SHOULD NOT contain bytes values.
     * The attribute values SHOULD NOT contain array values different than array of string values, bool values, int values,
     * double values.
     * The attribute values SHOULD NOT contain kvlist values.
     * The behavior of software that receives attributes containing such values can be unpredictable.
     * These restrictions can change in a minor release.
     * The restrictions take origin from the OpenTelemetry specification:
     * https://github.com/open-telemetry/opentelemetry-specification/blob/v1.47.0/specification/common/README.md#attribute.
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.common.v1.KeyValue attributes = 1;</code>
     */
    private $attributes;
    /**
     * dropped_attributes_count is the number of dropped attributes. If the value is 0, then
     * no attributes were dropped.
     *
     * Generated from protobuf field <code>uint32 dropped_attributes_count = 2;</code>
     */
    protected $dropped_attributes_count = 0;
    /**
     * Set of entities that participate in this Resource.
     * Note: keys in the references MUST exist in attributes of this message.
     * Status: [Development]
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.common.v1.EntityRef entity_refs = 3;</code>
     */
    private $entity_refs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Opentelemetry\Proto\Common\V1\KeyValue[]|\Google\Protobuf\Internal\RepeatedField $attributes
     *           Set of attributes that describe the resource.
     *           Attribute keys MUST be unique (it is not allowed to have more than one
     *           attribute with the same key).
     *           The attribute values SHOULD NOT contain empty values.
     *           The attribute values SHOULD NOT contain bytes values.
     *           The attribute values SHOULD NOT contain array values different than array of string values, bool values, int values,
     *           double values.
     *           The attribute values SHOULD NOT contain kvlist values.
     *           The behavior of software that receives attributes containing such values can be unpredictable.
     *           These restrictions can change in a minor release.
     *           The restrictions take origin from the OpenTelemetry specification:
     *           https://github.com/open-telemetry/opentelemetry-specification/blob/v1.47.0/specification/common/README.md#attribute.
     *     @type int $dropped_attributes_count
     *           dropped_attributes_count is the number of dropped attributes. If the value is 0, then
     *           no attributes were dropped.
     *     @type \Opentelemetry\Proto\Common\V1\EntityRef[]|\Google\Protobuf\Internal\RepeatedField $entity_refs
     *           Set of entities that participate in this Resource.
     *           Note: keys in the references MUST exist in attributes of this message.
     *           Status: [Development]
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Resource\V1\Resource::initOnce();
        parent::__construct($data);
    }

    /**
     * Set of attributes that describe the resource.
     * Attribute keys MUST be unique (it is not allowed to have more than one
     * attribute with the same key).
     * The attribute values SHOULD NOT contain empty values.
     * The attribute values SHOULD NOT contain bytes values.
     * The attribute values SHOULD NOT contain array values different than array of string values, bool values, int values,
     * double values.
     * The attribute values SHOULD NOT contain kvlist values.
     * The behavior of software that receives attributes containing such values can be unpredictable.
     * These restrictions can change in a minor release.
     * The restrictions take origin from the OpenTelemetry specification:
     * https://github.com/open-telemetry/opentelemetry-specification/blob/v1.47.0/specification/common/README.md#attribute.
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.common.v1.KeyValue attributes = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    /**
     * Set of attributes that describe the resource.
     * Attribute keys MUST be unique (it is not allowed to have more than one
     * attribute with the same key).
     * The attribute values SHOULD NOT contain empty values.
     * The attribute values SHOULD NOT contain bytes values.
     * The attribute values SHOULD NOT contain array values different than array of string values, bool values, int values,
     * double values.
     * The attribute values SHOULD NOT contain kvlist values.
     * The behavior of software that receives attributes containing such values can be unpredictable.
     * These restrictions can change in a minor release.
     * The restrictions take origin from the OpenTelemetry specification:
     * https://github.com/open-telemetry/opentelemetry-specification/blob/v1.47.0/specification/common/README.md#attribute.
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.common.v1.KeyValue attributes = 1;</code>
     * @param \Opentelemetry\Proto\Common\V1\KeyValue[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAttributes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Opentelemetry\Proto\Common\V1\KeyValue::class);
        $this->attributes = $arr;

        return $this;
    }

    /**
     * dropped_attributes_count is the number of dropped attributes. If the value is 0, then
     * no attributes were dropped.
     *
     * Generated from protobuf field <code>uint32 dropped_attributes_count = 2;</code>
     * @return int
     */
    public function getDroppedAttributesCount()
    {
        return $this->dropped_attributes_count;
    }

    /**
     * dropped_attributes_count is the number of dropped attributes. If the value is 0, then
     * no attributes were dropped.
     *
     * Generated from protobuf field <code>uint32 dropped_attributes_count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDroppedAttributesCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->dropped_attributes_count = $var;

        return $this;
    }

    /**
     * Set of entities that participate in this Resource.
     * Note: keys in the references MUST exist in attributes of this message.
     * Status: [Development]
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.common.v1.EntityRef entity_refs = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEntityRefs()
    {
        return $this->entity_refs;
    }

    /**
     * Set of entities that participate in this Resource.
     * Note: keys in the references MUST exist in attributes of this message.
     * Status: [Development]
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.common.v1.EntityRef entity_refs = 3;</code>
     * @param \Opentelemetry\Proto\Common\V1\EntityRef[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEntityRefs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Opentelemetry\Proto\Common\V1\EntityRef::class);
        $this->entity_refs = $arr;

        return $this;
    }

}

