<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opentelemetry/proto/profiles/v1development/profiles.proto

namespace Opentelemetry\Proto\Profiles\V1development;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ProfilesData represents the profiles data that can be stored in persistent storage,
 * OR can be embedded by other protocols that transfer OTLP profiles data but do not
 * implement the OTLP protocol.
 * The main difference between this message and collector protocol is that
 * in this message there will not be any "control" or "metadata" specific to
 * OTLP protocol.
 * When new fields are added into this message, the OTLP request MUST be updated
 * as well.
 *
 * Generated from protobuf message <code>opentelemetry.proto.profiles.v1development.ProfilesData</code>
 */
class ProfilesData extends \Google\Protobuf\Internal\Message
{
    /**
     * An array of ResourceProfiles.
     * For data coming from an SDK profiler, this array will typically contain one
     * element. Host-level profilers will usually create one ResourceProfile per
     * container, as well as one additional ResourceProfile grouping all samples
     * from non-containerized processes.
     * Other resource groupings are possible as well and clarified via
     * Resource.attributes and semantic conventions.
     * Tools that visualize profiles should prefer displaying
     * resources_profiles[0].scope_profiles[0].profiles[0] by default.
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.profiles.v1development.ResourceProfiles resource_profiles = 1;</code>
     */
    private $resource_profiles;
    /**
     * One instance of ProfilesDictionary
     *
     * Generated from protobuf field <code>.opentelemetry.proto.profiles.v1development.ProfilesDictionary dictionary = 2;</code>
     */
    protected $dictionary = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Opentelemetry\Proto\Profiles\V1development\ResourceProfiles[]|\Google\Protobuf\Internal\RepeatedField $resource_profiles
     *           An array of ResourceProfiles.
     *           For data coming from an SDK profiler, this array will typically contain one
     *           element. Host-level profilers will usually create one ResourceProfile per
     *           container, as well as one additional ResourceProfile grouping all samples
     *           from non-containerized processes.
     *           Other resource groupings are possible as well and clarified via
     *           Resource.attributes and semantic conventions.
     *           Tools that visualize profiles should prefer displaying
     *           resources_profiles[0].scope_profiles[0].profiles[0] by default.
     *     @type \Opentelemetry\Proto\Profiles\V1development\ProfilesDictionary $dictionary
     *           One instance of ProfilesDictionary
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opentelemetry\Proto\Profiles\V1Development\Profiles::initOnce();
        parent::__construct($data);
    }

    /**
     * An array of ResourceProfiles.
     * For data coming from an SDK profiler, this array will typically contain one
     * element. Host-level profilers will usually create one ResourceProfile per
     * container, as well as one additional ResourceProfile grouping all samples
     * from non-containerized processes.
     * Other resource groupings are possible as well and clarified via
     * Resource.attributes and semantic conventions.
     * Tools that visualize profiles should prefer displaying
     * resources_profiles[0].scope_profiles[0].profiles[0] by default.
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.profiles.v1development.ResourceProfiles resource_profiles = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getResourceProfiles()
    {
        return $this->resource_profiles;
    }

    /**
     * An array of ResourceProfiles.
     * For data coming from an SDK profiler, this array will typically contain one
     * element. Host-level profilers will usually create one ResourceProfile per
     * container, as well as one additional ResourceProfile grouping all samples
     * from non-containerized processes.
     * Other resource groupings are possible as well and clarified via
     * Resource.attributes and semantic conventions.
     * Tools that visualize profiles should prefer displaying
     * resources_profiles[0].scope_profiles[0].profiles[0] by default.
     *
     * Generated from protobuf field <code>repeated .opentelemetry.proto.profiles.v1development.ResourceProfiles resource_profiles = 1;</code>
     * @param \Opentelemetry\Proto\Profiles\V1development\ResourceProfiles[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setResourceProfiles($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Opentelemetry\Proto\Profiles\V1development\ResourceProfiles::class);
        $this->resource_profiles = $arr;

        return $this;
    }

    /**
     * One instance of ProfilesDictionary
     *
     * Generated from protobuf field <code>.opentelemetry.proto.profiles.v1development.ProfilesDictionary dictionary = 2;</code>
     * @return \Opentelemetry\Proto\Profiles\V1development\ProfilesDictionary|null
     */
    public function getDictionary()
    {
        return $this->dictionary;
    }

    public function hasDictionary()
    {
        return isset($this->dictionary);
    }

    public function clearDictionary()
    {
        unset($this->dictionary);
    }

    /**
     * One instance of ProfilesDictionary
     *
     * Generated from protobuf field <code>.opentelemetry.proto.profiles.v1development.ProfilesDictionary dictionary = 2;</code>
     * @param \Opentelemetry\Proto\Profiles\V1development\ProfilesDictionary $var
     * @return $this
     */
    public function setDictionary($var)
    {
        GPBUtil::checkMessage($var, \Opentelemetry\Proto\Profiles\V1development\ProfilesDictionary::class);
        $this->dictionary = $var;

        return $this;
    }

}

